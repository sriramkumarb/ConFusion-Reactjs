{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/form.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","dessignation","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderMenuItem","onClick","to","id","width","CardImgOverlay","Menu","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","state","handleSubmit","bind","values","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","messages","show","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","RenderLeader","Media","left","middle","object","body","heading","About","leaders","i","CardHeader","title","list","RenderDish","top","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","isModalOpen","toggleModal","setState","rating","Modal","isOpen","toggle","ModalHeader","ModalBody","submitComment","value","DishDetail","Header","toggleNav","handleLogin","isNavOpen","event","alert","username","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","outline","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","newFeedback","responseString","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fabd5234.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport {Card,  CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\nfunction RenderCard({item, isLoading, errMess}){\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.dessignation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home (props){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                    isLoading={props.dishesLoading}\r\n                    errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                    isLoading={props.promoLoading}\r\n                    errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                    isLoading={props.leaderLoading}\r\n                    errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","\r\n// implementing menu component via fuctional methods\r\n\r\nimport React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{  \r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\nexport default Menu;\r\n","import React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Col, Row,} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, Form, Errors} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len); \r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state ={};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        // console.log(\"Current State is: \" + JSON.stringify(values));\r\n        // alert(\"Current State is: \" + JSON.stringify(values));\r\n        this.props.postFeedback(\r\n            values.firstname,\r\n            values.lastname,\r\n            values.telnum,\r\n            values.email,\r\n            values.agree,\r\n            values.contactType,\r\n            values.message\r\n          );\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        // const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email );\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"#\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* form */}\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                                        placeholder=\"Fist Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" \r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" \r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: ' Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"/> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" \r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\n\r\nfunction RenderLeader(props) {\r\n    return (\r\n      <Media className=\"m-3\">\r\n        <Media left middle href=\"#\">\r\n          <Media object src={baseUrl + props.leader.image} alt={props.leader.name} />\r\n        </Media>\r\n        <Media body className=\"pl-5\">\r\n          <Media heading>{props.leader.name}</Media>\r\n          <p>{props.leader.designation}</p>\r\n          <p>{props.leader.description}</p>\r\n        </Media>\r\n      </Media>\r\n    );\r\n  }\r\n  \r\n\r\nfunction About(props) {\r\n\r\n    let leaders = \"\";\r\n    if (props.leaders.isLoading) {\r\n        leaders = (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n          </div>\r\n        );\r\n    } \r\n    else if (props.leaders.errMess) {\r\n        leaders = (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    } \r\n    else if (props.leaders.leaders) {\r\n        leaders = props.leaders.leaders.map((leader, i) => {\r\n            return (\r\n            <Fade in>\r\n                <li className=\"list-unstyled\">\r\n                <RenderLeader key={i} leader={leader}></RenderLeader>\r\n                </li>\r\n            </Fade>\r\n            );\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                    <Stagger in>{leaders}</Stagger>    \r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","\r\n// implementing dish detail component via functional methods\r\n\r\nimport React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,\r\n    Modal, ModalBody, ModalHeader, Button, Row, Col, Label } from 'reactstrap';\r\nimport {Control , LocalForm, Errors} from 'react-redux-form';\r\nimport {Link} from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n// jogesh sir dish detail component\r\n\r\n  function RenderDish({dish}){\r\n    return(\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <FadeTransform\r\n        in\r\n        transformProps={{\r\n            exitTransform: 'scale(0.5) translateY(-50%)'\r\n        }}>\r\n          <Card>\r\n            <CardImg top src={ baseUrl + dish.image} alt={dish.name} width=\"100%\" />\r\n            <CardBody>\r\n              <CardTitle>{dish.name}</CardTitle>\r\n              <CardText>{dish.description}</CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </FadeTransform>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function RenderComments({comments, postComment, dishId}) {\r\n    if (comments != null){\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                  <Stagger in>\r\n                    {comments.map((comment) => {\r\n                        return(\r\n                          <Fade in>\r\n                            <li key={comment.id}>\r\n                                <p>{comment.comment}</p>\r\n                                <p>-- {comment.author} ,  {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                            </li>\r\n                          </Fade>\r\n                        );\r\n                    })}\r\n                  </Stagger>\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment}></CommentForm>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n  }\r\n\r\n    const DishDetail = (props) => {\r\n      if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n      }\r\n      else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n      }\r\n      else if (props.dish != null){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>   \r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments}\r\n                      postComment={props.postComment}\r\n                      dishId={props.dish.id}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n      }\r\n      else{\r\n          return(\r\n              <div></div>\r\n          );\r\n      }\r\n    }\r\n\r\n// CommentForm Component and it's helper functions\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len); \r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    submitComment(values) {\r\n        // console.log(\"Curreny State is: \" + JSON.stringify(values));\r\n        // alert(\"Current State is: \" + JSON.stringify(values))\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n            <button className=\"btn btn-light border border-dark\" onClick={this.toggleModal}>\r\n                <span className=\"fa fa-pencil fa-lg\"></span> Submit comment\r\n            </button>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n              <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n              <ModalBody>\r\n                <LocalForm onSubmit={values => this.submitComment(values)}>\r\n                  <Row className=\"form-group\">\r\n                    <Label htmlFor=\"rating\" md={12}>\r\n                      Rating\r\n                    </Label>\r\n                    <Col md={12}>\r\n                      <Control.select\r\n                        model=\".rating\"\r\n                        id=\".rating\"\r\n                        name=\".rating\"\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                      </Control.select>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group\">\r\n                    <Label htmlFor=\"author\" md={12}>\r\n                      Your Name\r\n                    </Label>\r\n                    <Col md={12}>\r\n                      <Control.text\r\n                        model=\".author\"\r\n                        id=\"author\"\r\n                        name=\"author\"\r\n                        placeholder=\"Your Name\"\r\n                        className=\"form-control\"\r\n                        validators={{\r\n                          required,\r\n                          minLength: minLength(3),\r\n                          maxLength: maxLength(15)\r\n                        }}\r\n                      />\r\n                      <Errors\r\n                        className=\"text-danger\"\r\n                        model=\".author\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                          required: \"Required \",\r\n                          minLength: \"Must be greater than 2 characters\",\r\n                          maxLength: \"Must be 15 characters or less\"\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group\">\r\n                    <Label htmlFor=\"comment\" md={12}>\r\n                      Comment\r\n                    </Label>\r\n                    <Col md={12}>\r\n                      <Control.textarea\r\n                        model=\".comment\"\r\n                        id=\"comment\"\r\n                        name=\"comment\"\r\n                        rows=\"6\"\r\n                        className=\"form-control\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group\">\r\n                    <Col md={{ size: 10 }}>\r\n                      <Button type=\"submit\" color=\"primary\">\r\n                        Send Feedback\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </LocalForm>\r\n              </ModalBody>\r\n            </Modal>\r\n          </div>\r\n        );\r\n      \r\n    }\r\n}\r\n\r\n\r\nexport default DishDetail;","import React, {Component} from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n        Button, Modal, ModalBody, ModalHeader, Input, Form, Label, FormGroup } from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n        this.state={\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        }\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: ! this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: ! this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n           <React.Fragment> \r\n                {/* we can also use  <React.Fragment></React.Fragment> instead of <></> */}\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/home\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                              alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-lg fa-home\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-lg fa-info\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-lg fa-list\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-lg fa-address-card\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div> \r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <br />\r\n                            <FormGroup>\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                            </FormGroup>\r\n                        </Form>\r\n                        \r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\n// export const addFeedback = (feedback) => ({\r\n//     type: ActionTypes.ADD_FEEDBACK,\r\n//     payload: feedback\r\n// })\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response =>{\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const postFeedback = (firstname,lastname,telnum,email,agree,contactType,message) => (dispatch) => {\r\n    const newFeedback = {\r\n      firstname: firstname,\r\n      lastname: lastname,\r\n      telnum: telnum,\r\n      email: email,\r\n      agree: agree,\r\n      contactType: contactType,\r\n      message: message\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n  \r\n    return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } \r\n        else {\r\n            var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        // dispatch(addFeedback(response))\r\n        const responseString = JSON.stringify(response);\r\n        alert(\"Thank you for your feedback!\\n\" + responseString);\r\n    })\r\n    .catch(error => {\r\n        console.log(\"post feedback\", error.message);\r\n        alert(\"Your feedback could not be posted\\nError: \" + error.message);\r\n    });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response =>{\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response =>{\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response =>{\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response =>{\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n\r\n}\r\n\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n  });\r\n  \r\n  export const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n  });\r\n  \r\n  export const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n  });\r\n\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback} from '../redux/ActionCreators';\r\nimport {actions} from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    dishes : state.dishes,\r\n    comments : state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback:(firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishesErrMess={this.props.dishes.errMess}\r\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promoLoading={this.props.promotions.isLoading}\r\n              promoErrMess={this.props.promotions.errMess} \r\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n              leaderLoading={this.props.leaders.isLoading}\r\n              leaderErrMess={this.props.leaders.errMess} \r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />   \r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch location={this.props.location}>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n              <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n      case ActionTypes.ADD_COMMENTS:\r\n        return {...state, errMess: null, comments: action.payload};\r\n  \r\n      case ActionTypes.COMMENTS_FAILED:\r\n        return {...state, errMess: action.payload};\r\n  \r\n      case ActionTypes.ADD_COMMENT:\r\n          var comment = action.payload;\r\n          return { ...state, comments: state.comments.concat(comment)};\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  }","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,errMess: null,promotions:[]}, action) => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { isLoading: true, errMess: null, leaders: [] }, action) => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state,isLoading: false,errMess: null,leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, {Component} from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\nconst store = ConfigureStore();\n\n\nclass App extends Component {\n\n  render (){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport {createForms} from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './form';\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\nserviceWorker.unregister();"],"sourceRoot":""}